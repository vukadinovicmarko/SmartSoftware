//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartSoftwareWebService.DataSloj
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SmartSoftwareBazaEntities : DbContext
    {
        public SmartSoftwareBazaEntities()
            : base("name=SmartSoftwareBazaEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<parametarOprema> parametarOpremas { get; set; }
        public DbSet<uloge> uloges { get; set; }
        public DbSet<parametri> parametris { get; set; }
        public DbSet<Korpa> Korpas { get; set; }
        public DbSet<rezervacije> rezervacijes { get; set; }
        public DbSet<RezervacijeOprema> RezervacijeOpremas { get; set; }
        public DbSet<tip_opreme> tip_opreme { get; set; }
        public DbSet<oblasti_opreme> oblasti_opreme { get; set; }
        public DbSet<korisnici> korisnicis { get; set; }
        public DbSet<istorija_kupovine> istorija_kupovine { get; set; }
        public DbSet<istorija_kupovine_oprema> istorija_kupovine_oprema { get; set; }
        public DbSet<narudzbine> narudzbines { get; set; }
        public DbSet<kolekcija_opreme> kolekcija_opreme { get; set; }
        public DbSet<oprema> opremas { get; set; }
        public DbSet<grupe_ogranicenja> grupe_ogranicenja { get; set; }
        public DbSet<konfiguracija_kolekcije> konfiguracija_kolekcije { get; set; }
    
        public virtual ObjectResult<string> VrednostiParametra(Nullable<int> idParametra)
        {
            var idParametraParameter = idParametra.HasValue ?
                new ObjectParameter("idParametra", idParametra) :
                new ObjectParameter("idParametra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VrednostiParametra", idParametraParameter);
        }
    
        public virtual int AzurirajKorpu(Nullable<int> idOprema, Nullable<int> kolicina, Nullable<int> idProdavca)
        {
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            var idProdavcaParameter = idProdavca.HasValue ?
                new ObjectParameter("idProdavca", idProdavca) :
                new ObjectParameter("idProdavca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AzurirajKorpu", idOpremaParameter, kolicinaParameter, idProdavcaParameter);
        }
    
        public virtual int DodajUKorpu(Nullable<int> idOprema, Nullable<int> kolicina, Nullable<int> idProdavca)
        {
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            var idProdavcaParameter = idProdavca.HasValue ?
                new ObjectParameter("idProdavca", idProdavca) :
                new ObjectParameter("idProdavca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajUKorpu", idOpremaParameter, kolicinaParameter, idProdavcaParameter);
        }
    
        public virtual int ObrisiCeluKorpu(Nullable<int> idProdavca)
        {
            var idProdavcaParameter = idProdavca.HasValue ?
                new ObjectParameter("idProdavca", idProdavca) :
                new ObjectParameter("idProdavca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObrisiCeluKorpu", idProdavcaParameter);
        }
    
        public virtual int ObrisiOpremuIzKorpe(Nullable<int> idOpreme, Nullable<int> idProdavca)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            var idProdavcaParameter = idProdavca.HasValue ?
                new ObjectParameter("idProdavca", idProdavca) :
                new ObjectParameter("idProdavca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObrisiOpremuIzKorpe", idOpremeParameter, idProdavcaParameter);
        }
    
        public virtual int OpremaUpdate(string proizvodjac, string naslov, Nullable<double> cena, string opis, string model, Nullable<bool> lager, Nullable<int> kolicina_u_rezervi, Nullable<int> kolicina_na_lageru, Nullable<int> oprema_na_popustu, string slika, Nullable<int> idOpreme)
        {
            var proizvodjacParameter = proizvodjac != null ?
                new ObjectParameter("proizvodjac", proizvodjac) :
                new ObjectParameter("proizvodjac", typeof(string));
    
            var naslovParameter = naslov != null ?
                new ObjectParameter("naslov", naslov) :
                new ObjectParameter("naslov", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(double));
    
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var lagerParameter = lager.HasValue ?
                new ObjectParameter("lager", lager) :
                new ObjectParameter("lager", typeof(bool));
    
            var kolicina_u_rezerviParameter = kolicina_u_rezervi.HasValue ?
                new ObjectParameter("kolicina_u_rezervi", kolicina_u_rezervi) :
                new ObjectParameter("kolicina_u_rezervi", typeof(int));
    
            var kolicina_na_lageruParameter = kolicina_na_lageru.HasValue ?
                new ObjectParameter("kolicina_na_lageru", kolicina_na_lageru) :
                new ObjectParameter("kolicina_na_lageru", typeof(int));
    
            var oprema_na_popustuParameter = oprema_na_popustu.HasValue ?
                new ObjectParameter("oprema_na_popustu", oprema_na_popustu) :
                new ObjectParameter("oprema_na_popustu", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpremaUpdate", proizvodjacParameter, naslovParameter, cenaParameter, opisParameter, modelParameter, lagerParameter, kolicina_u_rezerviParameter, kolicina_na_lageruParameter, oprema_na_popustuParameter, slikaParameter, idOpremeParameter);
        }
    
        public virtual int AzurirajBrojPoena(Nullable<int> idKorisnika, Nullable<int> izabranaKolicinaPoena, Nullable<System.DateTime> datum_azuriranja)
        {
            var idKorisnikaParameter = idKorisnika.HasValue ?
                new ObjectParameter("idKorisnika", idKorisnika) :
                new ObjectParameter("idKorisnika", typeof(int));
    
            var izabranaKolicinaPoenaParameter = izabranaKolicinaPoena.HasValue ?
                new ObjectParameter("izabranaKolicinaPoena", izabranaKolicinaPoena) :
                new ObjectParameter("izabranaKolicinaPoena", typeof(int));
    
            var datum_azuriranjaParameter = datum_azuriranja.HasValue ?
                new ObjectParameter("datum_azuriranja", datum_azuriranja) :
                new ObjectParameter("datum_azuriranja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AzurirajBrojPoena", idKorisnikaParameter, izabranaKolicinaPoenaParameter, datum_azuriranjaParameter);
        }
    
        public virtual int AzurirajRezervacije(Nullable<int> idOprema, Nullable<int> kolicina, Nullable<int> idRezervacije, Nullable<System.DateTime> datumIstekaRezervacije, Nullable<System.DateTime> datumAzuriranjaRezervacije, string broj_telefona)
        {
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            var datumIstekaRezervacijeParameter = datumIstekaRezervacije.HasValue ?
                new ObjectParameter("datumIstekaRezervacije", datumIstekaRezervacije) :
                new ObjectParameter("datumIstekaRezervacije", typeof(System.DateTime));
    
            var datumAzuriranjaRezervacijeParameter = datumAzuriranjaRezervacije.HasValue ?
                new ObjectParameter("datumAzuriranjaRezervacije", datumAzuriranjaRezervacije) :
                new ObjectParameter("datumAzuriranjaRezervacije", typeof(System.DateTime));
    
            var broj_telefonaParameter = broj_telefona != null ?
                new ObjectParameter("broj_telefona", broj_telefona) :
                new ObjectParameter("broj_telefona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AzurirajRezervacije", idOpremaParameter, kolicinaParameter, idRezervacijeParameter, datumIstekaRezervacijeParameter, datumAzuriranjaRezervacijeParameter, broj_telefonaParameter);
        }
    
        public virtual int ObrisiOpremuIzRezervacije(Nullable<int> idRezervacije)
        {
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObrisiOpremuIzRezervacije", idRezervacijeParameter);
        }
    
        public virtual int ObrisiSveRezervacije()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObrisiSveRezervacije");
        }
    
        public virtual int DodajRezervacije(string ime, Nullable<System.DateTime> datum_rezervacije, Nullable<System.DateTime> datum_isteka_rezervacije, string broj_telefona, ObjectParameter idRezervacije)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var datum_rezervacijeParameter = datum_rezervacije.HasValue ?
                new ObjectParameter("datum_rezervacije", datum_rezervacije) :
                new ObjectParameter("datum_rezervacije", typeof(System.DateTime));
    
            var datum_isteka_rezervacijeParameter = datum_isteka_rezervacije.HasValue ?
                new ObjectParameter("datum_isteka_rezervacije", datum_isteka_rezervacije) :
                new ObjectParameter("datum_isteka_rezervacije", typeof(System.DateTime));
    
            var broj_telefonaParameter = broj_telefona != null ?
                new ObjectParameter("broj_telefona", broj_telefona) :
                new ObjectParameter("broj_telefona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajRezervacije", imeParameter, datum_rezervacijeParameter, datum_isteka_rezervacijeParameter, broj_telefonaParameter, idRezervacije);
        }
    
        public virtual int OblastiOpremeInsert(string nazivOblasti, string slika)
        {
            var nazivOblastiParameter = nazivOblasti != null ?
                new ObjectParameter("nazivOblasti", nazivOblasti) :
                new ObjectParameter("nazivOblasti", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OblastiOpremeInsert", nazivOblastiParameter, slikaParameter);
        }
    
        public virtual int OblastiOpremeUpdate(Nullable<int> idOblasti, string naziv, string slika)
        {
            var idOblastiParameter = idOblasti.HasValue ?
                new ObjectParameter("idOblasti", idOblasti) :
                new ObjectParameter("idOblasti", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OblastiOpremeUpdate", idOblastiParameter, nazivParameter, slikaParameter);
        }
    
        public virtual int ObrisiOblastOpreme(Nullable<int> id_oblasti_opreme)
        {
            var id_oblasti_opremeParameter = id_oblasti_opreme.HasValue ?
                new ObjectParameter("id_oblasti_opreme", id_oblasti_opreme) :
                new ObjectParameter("id_oblasti_opreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObrisiOblastOpreme", id_oblasti_opremeParameter);
        }
    
        public virtual int TipoviOpremeInsert(string naziv_tipa, Nullable<int> id_oblasti_opreme, string slika_tipa)
        {
            var naziv_tipaParameter = naziv_tipa != null ?
                new ObjectParameter("naziv_tipa", naziv_tipa) :
                new ObjectParameter("naziv_tipa", typeof(string));
    
            var id_oblasti_opremeParameter = id_oblasti_opreme.HasValue ?
                new ObjectParameter("id_oblasti_opreme", id_oblasti_opreme) :
                new ObjectParameter("id_oblasti_opreme", typeof(int));
    
            var slika_tipaParameter = slika_tipa != null ?
                new ObjectParameter("slika_tipa", slika_tipa) :
                new ObjectParameter("slika_tipa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoviOpremeInsert", naziv_tipaParameter, id_oblasti_opremeParameter, slika_tipaParameter);
        }
    
        public virtual int TipoviOpremeDelete(Nullable<int> id_tipa)
        {
            var id_tipaParameter = id_tipa.HasValue ?
                new ObjectParameter("id_tipa", id_tipa) :
                new ObjectParameter("id_tipa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoviOpremeDelete", id_tipaParameter);
        }
    
        public virtual int TipoviOpremeUpdate(Nullable<int> id_tip_opreme, string naziv_tipa, Nullable<int> id_oblasti_opreme, string slika_tipa)
        {
            var id_tip_opremeParameter = id_tip_opreme.HasValue ?
                new ObjectParameter("id_tip_opreme", id_tip_opreme) :
                new ObjectParameter("id_tip_opreme", typeof(int));
    
            var naziv_tipaParameter = naziv_tipa != null ?
                new ObjectParameter("naziv_tipa", naziv_tipa) :
                new ObjectParameter("naziv_tipa", typeof(string));
    
            var id_oblasti_opremeParameter = id_oblasti_opreme.HasValue ?
                new ObjectParameter("id_oblasti_opreme", id_oblasti_opreme) :
                new ObjectParameter("id_oblasti_opreme", typeof(int));
    
            var slika_tipaParameter = slika_tipa != null ?
                new ObjectParameter("slika_tipa", slika_tipa) :
                new ObjectParameter("slika_tipa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoviOpremeUpdate", id_tip_opremeParameter, naziv_tipaParameter, id_oblasti_opremeParameter, slika_tipaParameter);
        }
    
        public virtual int KorisniciUlogeInsert(Nullable<int> id_korisnici, Nullable<int> id_uloge)
        {
            var id_korisniciParameter = id_korisnici.HasValue ?
                new ObjectParameter("id_korisnici", id_korisnici) :
                new ObjectParameter("id_korisnici", typeof(int));
    
            var id_ulogeParameter = id_uloge.HasValue ?
                new ObjectParameter("id_uloge", id_uloge) :
                new ObjectParameter("id_uloge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KorisniciUlogeInsert", id_korisniciParameter, id_ulogeParameter);
        }
    
        public virtual int ZaposleniKorisniciInsert(string ime, string prezime, string mejl, string broj_telefona, string username, string lozinka, Nullable<int> broj_ostvareni_poena, Nullable<bool> pol_korisnika, string putanja_do_slike, Nullable<int> idUloge, Nullable<System.DateTime> datum_kreiranja)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var mejlParameter = mejl != null ?
                new ObjectParameter("mejl", mejl) :
                new ObjectParameter("mejl", typeof(string));
    
            var broj_telefonaParameter = broj_telefona != null ?
                new ObjectParameter("broj_telefona", broj_telefona) :
                new ObjectParameter("broj_telefona", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("lozinka", lozinka) :
                new ObjectParameter("lozinka", typeof(string));
    
            var broj_ostvareni_poenaParameter = broj_ostvareni_poena.HasValue ?
                new ObjectParameter("broj_ostvareni_poena", broj_ostvareni_poena) :
                new ObjectParameter("broj_ostvareni_poena", typeof(int));
    
            var pol_korisnikaParameter = pol_korisnika.HasValue ?
                new ObjectParameter("pol_korisnika", pol_korisnika) :
                new ObjectParameter("pol_korisnika", typeof(bool));
    
            var putanja_do_slikeParameter = putanja_do_slike != null ?
                new ObjectParameter("putanja_do_slike", putanja_do_slike) :
                new ObjectParameter("putanja_do_slike", typeof(string));
    
            var idUlogeParameter = idUloge.HasValue ?
                new ObjectParameter("idUloge", idUloge) :
                new ObjectParameter("idUloge", typeof(int));
    
            var datum_kreiranjaParameter = datum_kreiranja.HasValue ?
                new ObjectParameter("datum_kreiranja", datum_kreiranja) :
                new ObjectParameter("datum_kreiranja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZaposleniKorisniciInsert", imeParameter, prezimeParameter, mejlParameter, broj_telefonaParameter, usernameParameter, lozinkaParameter, broj_ostvareni_poenaParameter, pol_korisnikaParameter, putanja_do_slikeParameter, idUlogeParameter, datum_kreiranjaParameter);
        }
    
        public virtual int ZaposleniKorisniciUpdate(Nullable<int> idKorisnika, string ime, string prezime, string mejl, string broj_telefona, string username, string lozinka, Nullable<int> broj_ostvareni_poena, Nullable<bool> pol_korisnika, string slika_korisnika, Nullable<int> idUloge, Nullable<System.DateTime> datum_azuriranja)
        {
            var idKorisnikaParameter = idKorisnika.HasValue ?
                new ObjectParameter("idKorisnika", idKorisnika) :
                new ObjectParameter("idKorisnika", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var mejlParameter = mejl != null ?
                new ObjectParameter("mejl", mejl) :
                new ObjectParameter("mejl", typeof(string));
    
            var broj_telefonaParameter = broj_telefona != null ?
                new ObjectParameter("broj_telefona", broj_telefona) :
                new ObjectParameter("broj_telefona", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("lozinka", lozinka) :
                new ObjectParameter("lozinka", typeof(string));
    
            var broj_ostvareni_poenaParameter = broj_ostvareni_poena.HasValue ?
                new ObjectParameter("broj_ostvareni_poena", broj_ostvareni_poena) :
                new ObjectParameter("broj_ostvareni_poena", typeof(int));
    
            var pol_korisnikaParameter = pol_korisnika.HasValue ?
                new ObjectParameter("pol_korisnika", pol_korisnika) :
                new ObjectParameter("pol_korisnika", typeof(bool));
    
            var slika_korisnikaParameter = slika_korisnika != null ?
                new ObjectParameter("slika_korisnika", slika_korisnika) :
                new ObjectParameter("slika_korisnika", typeof(string));
    
            var idUlogeParameter = idUloge.HasValue ?
                new ObjectParameter("idUloge", idUloge) :
                new ObjectParameter("idUloge", typeof(int));
    
            var datum_azuriranjaParameter = datum_azuriranja.HasValue ?
                new ObjectParameter("datum_azuriranja", datum_azuriranja) :
                new ObjectParameter("datum_azuriranja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZaposleniKorisniciUpdate", idKorisnikaParameter, imeParameter, prezimeParameter, mejlParameter, broj_telefonaParameter, usernameParameter, lozinkaParameter, broj_ostvareni_poenaParameter, pol_korisnikaParameter, slika_korisnikaParameter, idUlogeParameter, datum_azuriranjaParameter);
        }
    
        public virtual int UpdateVrednostParametra(string vrednost_parametra, Nullable<int> idParametra, Nullable<int> idOpreme)
        {
            var vrednost_parametraParameter = vrednost_parametra != null ?
                new ObjectParameter("vrednost_parametra", vrednost_parametra) :
                new ObjectParameter("vrednost_parametra", typeof(string));
    
            var idParametraParameter = idParametra.HasValue ?
                new ObjectParameter("idParametra", idParametra) :
                new ObjectParameter("idParametra", typeof(int));
    
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVrednostParametra", vrednost_parametraParameter, idParametraParameter, idOpremeParameter);
        }
    
        public virtual int OpremaInsert(ObjectParameter idOpreme, string proizvodjac, string naslov, Nullable<double> cena, string opis, string model, Nullable<bool> lager, Nullable<int> kolicina_u_rezervi, Nullable<int> kolicina_na_lageru, Nullable<int> oprema_na_popustu, string slika, Nullable<int> idTipOpreme)
        {
            var proizvodjacParameter = proizvodjac != null ?
                new ObjectParameter("proizvodjac", proizvodjac) :
                new ObjectParameter("proizvodjac", typeof(string));
    
            var naslovParameter = naslov != null ?
                new ObjectParameter("naslov", naslov) :
                new ObjectParameter("naslov", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("cena", cena) :
                new ObjectParameter("cena", typeof(double));
    
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var lagerParameter = lager.HasValue ?
                new ObjectParameter("lager", lager) :
                new ObjectParameter("lager", typeof(bool));
    
            var kolicina_u_rezerviParameter = kolicina_u_rezervi.HasValue ?
                new ObjectParameter("kolicina_u_rezervi", kolicina_u_rezervi) :
                new ObjectParameter("kolicina_u_rezervi", typeof(int));
    
            var kolicina_na_lageruParameter = kolicina_na_lageru.HasValue ?
                new ObjectParameter("kolicina_na_lageru", kolicina_na_lageru) :
                new ObjectParameter("kolicina_na_lageru", typeof(int));
    
            var oprema_na_popustuParameter = oprema_na_popustu.HasValue ?
                new ObjectParameter("oprema_na_popustu", oprema_na_popustu) :
                new ObjectParameter("oprema_na_popustu", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            var idTipOpremeParameter = idTipOpreme.HasValue ?
                new ObjectParameter("idTipOpreme", idTipOpreme) :
                new ObjectParameter("idTipOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpremaInsert", idOpreme, proizvodjacParameter, naslovParameter, cenaParameter, opisParameter, modelParameter, lagerParameter, kolicina_u_rezerviParameter, kolicina_na_lageruParameter, oprema_na_popustuParameter, slikaParameter, idTipOpremeParameter);
        }
    
        public virtual int OpremaDelete(Nullable<int> idOpreme)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpremaDelete", idOpremeParameter);
        }
    
        public virtual int RestoreIzbrisanaOblastOpreme(Nullable<int> idOblastiOpreme)
        {
            var idOblastiOpremeParameter = idOblastiOpreme.HasValue ?
                new ObjectParameter("idOblastiOpreme", idOblastiOpreme) :
                new ObjectParameter("idOblastiOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisanaOblastOpreme", idOblastiOpremeParameter);
        }
    
        public virtual int RestoreIzbrisanaOprema(Nullable<int> idOpreme)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisanaOprema", idOpremeParameter);
        }
    
        public virtual int RestoreIzbrisaneOpreme()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisaneOpreme");
        }
    
        public virtual int RestoreIzbrisaniTipoviOpreme(Nullable<int> idOblastiOpreme)
        {
            var idOblastiOpremeParameter = idOblastiOpreme.HasValue ?
                new ObjectParameter("idOblastiOpreme", idOblastiOpreme) :
                new ObjectParameter("idOblastiOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisaniTipoviOpreme", idOblastiOpremeParameter);
        }
    
        public virtual int RestoreIzbrisanTipOpreme(Nullable<int> idTipOpreme)
        {
            var idTipOpremeParameter = idTipOpreme.HasValue ?
                new ObjectParameter("idTipOpreme", idTipOpreme) :
                new ObjectParameter("idTipOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisanTipOpreme", idTipOpremeParameter);
        }
    
        public virtual int DodajUIstorijuKupovine(ObjectParameter id_istorija_kupovine, Nullable<System.DateTime> datum_prodaje, Nullable<int> id_prodavca, Nullable<int> id_kupca, Nullable<double> ukupna_cena_kupovine, Nullable<double> broj_iskoriscenih_popust_poena)
        {
            var datum_prodajeParameter = datum_prodaje.HasValue ?
                new ObjectParameter("datum_prodaje", datum_prodaje) :
                new ObjectParameter("datum_prodaje", typeof(System.DateTime));
    
            var id_prodavcaParameter = id_prodavca.HasValue ?
                new ObjectParameter("id_prodavca", id_prodavca) :
                new ObjectParameter("id_prodavca", typeof(int));
    
            var id_kupcaParameter = id_kupca.HasValue ?
                new ObjectParameter("id_kupca", id_kupca) :
                new ObjectParameter("id_kupca", typeof(int));
    
            var ukupna_cena_kupovineParameter = ukupna_cena_kupovine.HasValue ?
                new ObjectParameter("ukupna_cena_kupovine", ukupna_cena_kupovine) :
                new ObjectParameter("ukupna_cena_kupovine", typeof(double));
    
            var broj_iskoriscenih_popust_poenaParameter = broj_iskoriscenih_popust_poena.HasValue ?
                new ObjectParameter("broj_iskoriscenih_popust_poena", broj_iskoriscenih_popust_poena) :
                new ObjectParameter("broj_iskoriscenih_popust_poena", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajUIstorijuKupovine", id_istorija_kupovine, datum_prodajeParameter, id_prodavcaParameter, id_kupcaParameter, ukupna_cena_kupovineParameter, broj_iskoriscenih_popust_poenaParameter);
        }
    
        public virtual int DodajUIstorijuKupovineOprema(Nullable<int> id_oprema, Nullable<int> kolicina, Nullable<double> cena_opreme_kad_je_prodata, Nullable<double> popust_na_cenu, Nullable<int> ukupna_cena_artikla, Nullable<int> id_istorija_kupovine)
        {
            var id_opremaParameter = id_oprema.HasValue ?
                new ObjectParameter("id_oprema", id_oprema) :
                new ObjectParameter("id_oprema", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            var cena_opreme_kad_je_prodataParameter = cena_opreme_kad_je_prodata.HasValue ?
                new ObjectParameter("cena_opreme_kad_je_prodata", cena_opreme_kad_je_prodata) :
                new ObjectParameter("cena_opreme_kad_je_prodata", typeof(double));
    
            var popust_na_cenuParameter = popust_na_cenu.HasValue ?
                new ObjectParameter("popust_na_cenu", popust_na_cenu) :
                new ObjectParameter("popust_na_cenu", typeof(double));
    
            var ukupna_cena_artiklaParameter = ukupna_cena_artikla.HasValue ?
                new ObjectParameter("ukupna_cena_artikla", ukupna_cena_artikla) :
                new ObjectParameter("ukupna_cena_artikla", typeof(int));
    
            var id_istorija_kupovineParameter = id_istorija_kupovine.HasValue ?
                new ObjectParameter("id_istorija_kupovine", id_istorija_kupovine) :
                new ObjectParameter("id_istorija_kupovine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajUIstorijuKupovineOprema", id_opremaParameter, kolicinaParameter, cena_opreme_kad_je_prodataParameter, popust_na_cenuParameter, ukupna_cena_artiklaParameter, id_istorija_kupovineParameter);
        }
    
        public virtual int ParametriInsert(string nazivParametra, string defaultVrednost, Nullable<int> idTipOpreme, Nullable<bool> zaFilter, string tipParametra)
        {
            var nazivParametraParameter = nazivParametra != null ?
                new ObjectParameter("nazivParametra", nazivParametra) :
                new ObjectParameter("nazivParametra", typeof(string));
    
            var defaultVrednostParameter = defaultVrednost != null ?
                new ObjectParameter("defaultVrednost", defaultVrednost) :
                new ObjectParameter("defaultVrednost", typeof(string));
    
            var idTipOpremeParameter = idTipOpreme.HasValue ?
                new ObjectParameter("idTipOpreme", idTipOpreme) :
                new ObjectParameter("idTipOpreme", typeof(int));
    
            var zaFilterParameter = zaFilter.HasValue ?
                new ObjectParameter("zaFilter", zaFilter) :
                new ObjectParameter("zaFilter", typeof(bool));
    
            var tipParametraParameter = tipParametra != null ?
                new ObjectParameter("tipParametra", tipParametra) :
                new ObjectParameter("tipParametra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParametriInsert", nazivParametraParameter, defaultVrednostParameter, idTipOpremeParameter, zaFilterParameter, tipParametraParameter);
        }
    
        public virtual int ParametriUpdate(Nullable<int> idParametra, string nazivParametra, string defaultVrednost, Nullable<int> idTipOpreme, Nullable<bool> zaFilter, string tipParametra)
        {
            var idParametraParameter = idParametra.HasValue ?
                new ObjectParameter("idParametra", idParametra) :
                new ObjectParameter("idParametra", typeof(int));
    
            var nazivParametraParameter = nazivParametra != null ?
                new ObjectParameter("nazivParametra", nazivParametra) :
                new ObjectParameter("nazivParametra", typeof(string));
    
            var defaultVrednostParameter = defaultVrednost != null ?
                new ObjectParameter("defaultVrednost", defaultVrednost) :
                new ObjectParameter("defaultVrednost", typeof(string));
    
            var idTipOpremeParameter = idTipOpreme.HasValue ?
                new ObjectParameter("idTipOpreme", idTipOpreme) :
                new ObjectParameter("idTipOpreme", typeof(int));
    
            var zaFilterParameter = zaFilter.HasValue ?
                new ObjectParameter("zaFilter", zaFilter) :
                new ObjectParameter("zaFilter", typeof(bool));
    
            var tipParametraParameter = tipParametra != null ?
                new ObjectParameter("tipParametra", tipParametra) :
                new ObjectParameter("tipParametra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParametriUpdate", idParametraParameter, nazivParametraParameter, defaultVrednostParameter, idTipOpremeParameter, zaFilterParameter, tipParametraParameter);
        }
    
        public virtual int ParametriDelete(Nullable<int> idParametra)
        {
            var idParametraParameter = idParametra.HasValue ?
                new ObjectParameter("idParametra", idParametra) :
                new ObjectParameter("idParametra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParametriDelete", idParametraParameter);
        }
    
        public virtual int RestoreIzbrisaniParametri()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisaniParametri");
        }
    
        public virtual int RestoreIzbrisanParametar(Nullable<int> idParametar)
        {
            var idParametarParameter = idParametar.HasValue ?
                new ObjectParameter("idParametar", idParametar) :
                new ObjectParameter("idParametar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisanParametar", idParametarParameter);
        }
    
        public virtual int KorisniciDelete(Nullable<int> idKorisnika)
        {
            var idKorisnikaParameter = idKorisnika.HasValue ?
                new ObjectParameter("idKorisnika", idKorisnika) :
                new ObjectParameter("idKorisnika", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KorisniciDelete", idKorisnikaParameter);
        }
    
        public virtual int RestoreIzbrisanKorisnik(Nullable<int> idKorisnik)
        {
            var idKorisnikParameter = idKorisnik.HasValue ?
                new ObjectParameter("idKorisnik", idKorisnik) :
                new ObjectParameter("idKorisnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisanKorisnik", idKorisnikParameter);
        }
    
        public virtual int DodajKorisnika(string ime, string prezime, string mejl, string broj_telefona, Nullable<int> idUloge, Nullable<System.DateTime> datum_kreiranja)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var mejlParameter = mejl != null ?
                new ObjectParameter("mejl", mejl) :
                new ObjectParameter("mejl", typeof(string));
    
            var broj_telefonaParameter = broj_telefona != null ?
                new ObjectParameter("broj_telefona", broj_telefona) :
                new ObjectParameter("broj_telefona", typeof(string));
    
            var idUlogeParameter = idUloge.HasValue ?
                new ObjectParameter("idUloge", idUloge) :
                new ObjectParameter("idUloge", typeof(int));
    
            var datum_kreiranjaParameter = datum_kreiranja.HasValue ?
                new ObjectParameter("datum_kreiranja", datum_kreiranja) :
                new ObjectParameter("datum_kreiranja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajKorisnika", imeParameter, prezimeParameter, mejlParameter, broj_telefonaParameter, idUlogeParameter, datum_kreiranjaParameter);
        }
    
        public virtual ObjectResult<IstorijaKupovineKupciKojiNajviseKupuju_Result> IstorijaKupovineKupciKojiNajviseKupuju(Nullable<bool> aSC)
        {
            var aSCParameter = aSC.HasValue ?
                new ObjectParameter("ASC", aSC) :
                new ObjectParameter("ASC", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IstorijaKupovineKupciKojiNajviseKupuju_Result>("IstorijaKupovineKupciKojiNajviseKupuju", aSCParameter);
        }
    
        public virtual ObjectResult<IstorijaKupovineNajcesciKupci_Result> IstorijaKupovineNajcesciKupci(Nullable<bool> aSC)
        {
            var aSCParameter = aSC.HasValue ?
                new ObjectParameter("ASC", aSC) :
                new ObjectParameter("ASC", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IstorijaKupovineNajcesciKupci_Result>("IstorijaKupovineNajcesciKupci", aSCParameter);
        }
    
        public virtual ObjectResult<IstorijaKupovineNajprodavanijaOprema_Result> IstorijaKupovineNajprodavanijaOprema(Nullable<bool> aSC)
        {
            var aSCParameter = aSC.HasValue ?
                new ObjectParameter("ASC", aSC) :
                new ObjectParameter("ASC", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IstorijaKupovineNajprodavanijaOprema_Result>("IstorijaKupovineNajprodavanijaOprema", aSCParameter);
        }
    
        public virtual int IstorijaKupovineUkupnoProdanoOpremeDanas(Nullable<System.DateTime> datumDanas, Nullable<System.DateTime> datumSutra, ObjectParameter brojProdateOpremeDanas)
        {
            var datumDanasParameter = datumDanas.HasValue ?
                new ObjectParameter("datumDanas", datumDanas) :
                new ObjectParameter("datumDanas", typeof(System.DateTime));
    
            var datumSutraParameter = datumSutra.HasValue ?
                new ObjectParameter("datumSutra", datumSutra) :
                new ObjectParameter("datumSutra", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IstorijaKupovineUkupnoProdanoOpremeDanas", datumDanasParameter, datumSutraParameter, brojProdateOpremeDanas);
        }
    
        public virtual int IstorijaKupovineUkupnoZaradjeno(ObjectParameter ukupnoZaradjeno)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IstorijaKupovineUkupnoZaradjeno", ukupnoZaradjeno);
        }
    
        public virtual int IstorijaKupovineZaradjenoDanas(Nullable<System.DateTime> datumDanas, Nullable<System.DateTime> datumSutra, ObjectParameter ukupnoZaradjeno)
        {
            var datumDanasParameter = datumDanas.HasValue ?
                new ObjectParameter("datumDanas", datumDanas) :
                new ObjectParameter("datumDanas", typeof(System.DateTime));
    
            var datumSutraParameter = datumSutra.HasValue ?
                new ObjectParameter("datumSutra", datumSutra) :
                new ObjectParameter("datumSutra", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IstorijaKupovineZaradjenoDanas", datumDanasParameter, datumSutraParameter, ukupnoZaradjeno);
        }
    
        public virtual int InsertRezervacijeOprema(Nullable<int> idOprema, Nullable<int> idRezervacije, Nullable<int> kolicina)
        {
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRezervacijeOprema", idOpremaParameter, idRezervacijeParameter, kolicinaParameter);
        }
    
        public virtual ObjectResult<IstorijaKupovinePotrosnjaKupaca_Result> IstorijaKupovinePotrosnjaKupaca(Nullable<bool> aSC)
        {
            var aSCParameter = aSC.HasValue ?
                new ObjectParameter("ASC", aSC) :
                new ObjectParameter("ASC", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IstorijaKupovinePotrosnjaKupaca_Result>("IstorijaKupovinePotrosnjaKupaca", aSCParameter);
        }
    
        public virtual int NarudzbineDelete(Nullable<int> idNarudzbine)
        {
            var idNarudzbineParameter = idNarudzbine.HasValue ?
                new ObjectParameter("idNarudzbine", idNarudzbine) :
                new ObjectParameter("idNarudzbine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbineDelete", idNarudzbineParameter);
        }
    
        public virtual int NarudzbineInsert(Nullable<int> idOpreme, Nullable<int> kolicina, Nullable<int> idProdavca, Nullable<System.DateTime> datumNarudzbine)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            var idProdavcaParameter = idProdavca.HasValue ?
                new ObjectParameter("idProdavca", idProdavca) :
                new ObjectParameter("idProdavca", typeof(int));
    
            var datumNarudzbineParameter = datumNarudzbine.HasValue ?
                new ObjectParameter("datumNarudzbine", datumNarudzbine) :
                new ObjectParameter("datumNarudzbine", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbineInsert", idOpremeParameter, kolicinaParameter, idProdavcaParameter, datumNarudzbineParameter);
        }
    
        public virtual int KolekcijaOpremeInsert(Nullable<int> idOpreme, Nullable<int> idDeo)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            var idDeoParameter = idDeo.HasValue ?
                new ObjectParameter("idDeo", idDeo) :
                new ObjectParameter("idDeo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KolekcijaOpremeInsert", idOpremeParameter, idDeoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IstorijaKupovineKupciInitPrikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IstorijaKupovineKupciInitPrikaz");
        }
    
        public virtual int OpremaSkiniSaLagera(Nullable<int> idOpreme)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpremaSkiniSaLagera", idOpremeParameter);
        }
    
        public virtual int KonfigurcijaKolekcijeInsertUpdate(Nullable<int> idTipOpremeKolekcije, Nullable<int> idTipOpremeDeoKolekcije, Nullable<int> redosledPrikazivanja, Nullable<bool> izabranZaKonfiguraciju)
        {
            var idTipOpremeKolekcijeParameter = idTipOpremeKolekcije.HasValue ?
                new ObjectParameter("idTipOpremeKolekcije", idTipOpremeKolekcije) :
                new ObjectParameter("idTipOpremeKolekcije", typeof(int));
    
            var idTipOpremeDeoKolekcijeParameter = idTipOpremeDeoKolekcije.HasValue ?
                new ObjectParameter("idTipOpremeDeoKolekcije", idTipOpremeDeoKolekcije) :
                new ObjectParameter("idTipOpremeDeoKolekcije", typeof(int));
    
            var redosledPrikazivanjaParameter = redosledPrikazivanja.HasValue ?
                new ObjectParameter("redosledPrikazivanja", redosledPrikazivanja) :
                new ObjectParameter("redosledPrikazivanja", typeof(int));
    
            var izabranZaKonfiguracijuParameter = izabranZaKonfiguraciju.HasValue ?
                new ObjectParameter("izabranZaKonfiguraciju", izabranZaKonfiguraciju) :
                new ObjectParameter("izabranZaKonfiguraciju", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KonfigurcijaKolekcijeInsertUpdate", idTipOpremeKolekcijeParameter, idTipOpremeDeoKolekcijeParameter, redosledPrikazivanjaParameter, izabranZaKonfiguracijuParameter);
        }
    
        public virtual int GrupeOgranicenjaInsert(Nullable<int> idTipOpreme1, Nullable<int> idTipOpreme2, Nullable<int> idParametra1, Nullable<int> idParametra2, Nullable<int> idTipOpremeKolekcije, string tipProvere)
        {
            var idTipOpreme1Parameter = idTipOpreme1.HasValue ?
                new ObjectParameter("idTipOpreme1", idTipOpreme1) :
                new ObjectParameter("idTipOpreme1", typeof(int));
    
            var idTipOpreme2Parameter = idTipOpreme2.HasValue ?
                new ObjectParameter("idTipOpreme2", idTipOpreme2) :
                new ObjectParameter("idTipOpreme2", typeof(int));
    
            var idParametra1Parameter = idParametra1.HasValue ?
                new ObjectParameter("idParametra1", idParametra1) :
                new ObjectParameter("idParametra1", typeof(int));
    
            var idParametra2Parameter = idParametra2.HasValue ?
                new ObjectParameter("idParametra2", idParametra2) :
                new ObjectParameter("idParametra2", typeof(int));
    
            var idTipOpremeKolekcijeParameter = idTipOpremeKolekcije.HasValue ?
                new ObjectParameter("idTipOpremeKolekcije", idTipOpremeKolekcije) :
                new ObjectParameter("idTipOpremeKolekcije", typeof(int));
    
            var tipProvereParameter = tipProvere != null ?
                new ObjectParameter("tipProvere", tipProvere) :
                new ObjectParameter("tipProvere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GrupeOgranicenjaInsert", idTipOpreme1Parameter, idTipOpreme2Parameter, idParametra1Parameter, idParametra2Parameter, idTipOpremeKolekcijeParameter, tipProvereParameter);
        }
    
        public virtual ObjectResult<string> VrednostiParametraGlavniProzor(Nullable<int> idParametra)
        {
            var idParametraParameter = idParametra.HasValue ?
                new ObjectParameter("idParametra", idParametra) :
                new ObjectParameter("idParametra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VrednostiParametraGlavniProzor", idParametraParameter);
        }
    
        public virtual int RestoreIzbrisanParametarOprema(Nullable<int> idOpreme)
        {
            var idOpremeParameter = idOpreme.HasValue ?
                new ObjectParameter("idOpreme", idOpreme) :
                new ObjectParameter("idOpreme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreIzbrisanParametarOprema", idOpremeParameter);
        }
    
        public virtual int IzbrisiRezervaciju(Nullable<int> idRezervacije)
        {
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IzbrisiRezervaciju", idRezervacijeParameter);
        }
    
        public virtual int DeletePojedinacnoRezervacijeOprema(Nullable<int> idOprema, Nullable<int> idRezervacije, Nullable<int> kolicina)
        {
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePojedinacnoRezervacijeOprema", idOpremaParameter, idRezervacijeParameter, kolicinaParameter);
        }
    
        public virtual int DodajUKorpuIzRezervacije(Nullable<int> idOprema, Nullable<int> kolicina, Nullable<int> idProdavca)
        {
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            var idProdavcaParameter = idProdavca.HasValue ?
                new ObjectParameter("idProdavca", idProdavca) :
                new ObjectParameter("idProdavca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajUKorpuIzRezervacije", idOpremaParameter, kolicinaParameter, idProdavcaParameter);
        }
    
        public virtual int IzbrisiRezervacijuZaStavljanjeUkorpu(Nullable<int> idRezervacije)
        {
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IzbrisiRezervacijuZaStavljanjeUkorpu", idRezervacijeParameter);
        }
    
        public virtual int IzbrisiOpremuIzRezervacije(Nullable<int> idRezervacije, Nullable<int> idOprema)
        {
            var idRezervacijeParameter = idRezervacije.HasValue ?
                new ObjectParameter("idRezervacije", idRezervacije) :
                new ObjectParameter("idRezervacije", typeof(int));
    
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IzbrisiOpremuIzRezervacije", idRezervacijeParameter, idOpremaParameter);
        }
    
        public virtual int NarudzbinePrihvati(Nullable<int> idNarudzbine, Nullable<int> idOprema, Nullable<int> kolicina)
        {
            var idNarudzbineParameter = idNarudzbine.HasValue ?
                new ObjectParameter("idNarudzbine", idNarudzbine) :
                new ObjectParameter("idNarudzbine", typeof(int));
    
            var idOpremaParameter = idOprema.HasValue ?
                new ObjectParameter("idOprema", idOprema) :
                new ObjectParameter("idOprema", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NarudzbinePrihvati", idNarudzbineParameter, idOpremaParameter, kolicinaParameter);
        }
    }
}
